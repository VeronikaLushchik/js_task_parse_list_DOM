{"version":3,"sources":["scripts/main.js"],"names":["listOfEmployees","document","querySelector","sortedList","sortList","objList","getEmployees","list","children","sort","a","b","strToNumber","dataset","salary","string","replace","split","join","map","employee","name","innerText","position","age","forEach","person","append"],"mappings":";AAAA,aA4BC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAzBD,IAAMA,EAAkBC,SAASC,cAAc,MACzCC,EAAaC,EAASJ,GACtBK,EAAUC,EAAaN,GAI7B,SAASI,EAASG,GACT,OAAA,EAAIA,EAAKC,UAAUC,KAEjBA,SAAKC,EAAGC,GACRC,OAAAA,EAAYD,EAAEE,QAAQC,QAAUF,EAAYF,EAAEG,QAAQC,UAIjE,SAASF,EAAYG,GACZA,OAAAA,EAAOC,QAAQ,IAAK,IAAIC,MAAM,KAAKC,KAAK,IAGjD,SAASZ,EAAaC,GACb,OAAA,EAAIA,EAAKC,UAAUW,IAAI,SAAAC,GAAa,MAAA,CACzCC,KAAMD,EAASE,UACfC,SAAUH,EAASP,QAAQU,SAC3BT,OAAQM,EAASP,QAAQC,OACzBU,IAAKJ,EAASP,QAAQW,OAnB1BrB,EAAWsB,QAAQ,SAAAC,GAAU1B,OAAAA,EAAgB2B,OAAOD","file":"main.261d7f0b.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// write code here\nconst listOfEmployees = document.querySelector('ul');\nconst sortedList = sortList(listOfEmployees);\nconst objList = getEmployees(listOfEmployees);\n\nsortedList.forEach(person => listOfEmployees.append(person));\n\nfunction sortList(list) {\n  return [...list.children].sort(sort);\n\n  function sort(a, b) {\n    return strToNumber(b.dataset.salary) - strToNumber(a.dataset.salary);\n  }\n};\n\nfunction strToNumber(string) {\n  return string.replace('$', '').split(',').join('');\n};\n\nfunction getEmployees(list) {\n  return [...list.children].map(employee => ({\n    name: employee.innerText,\n    position: employee.dataset.position,\n    salary: employee.dataset.salary,\n    age: employee.dataset.age,\n  }));\n}\n"]}